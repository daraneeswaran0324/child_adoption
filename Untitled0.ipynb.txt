{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "39MQRdE-vPgF"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xUDtI-5ayXQX"
      },
      "outputs": [],
      "source": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "meiBp-8HvR-P"
      },
      "outputs": [],
      "source": [
        "victims_df = pd.read_csv('/content/sample_data/victims_2011 - victims_2011.csv')\n",
        "in_care_df = pd.read_csv('/content/sample_data/in_care - in_care.csv')\n",
        "adopted_df = pd.read_csv('/content/sample_data/adopted - adopted.csv')\n",
        "tpr_df = pd.read_csv('/content/sample_data/tpr - tpr.csv')\n",
        "perpetrators_df = pd.read_csv('/content/sample_data/perpetrators - perpetrators.csv')\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# New Section"
      ],
      "metadata": {
        "id": "c-oqlrT2DZtO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "adopted_df.head()"
      ],
      "metadata": {
        "id": "YstLVK8S649x",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 267
        },
        "outputId": "63e761da-308b-4997-f3d0-17a153e287bb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    Status       State  FY 2010  FY 2011  FY 2012  FY 2013  FY 2014  FY 2015  \\\n",
              "0  Adopted     Alabama      606      447      587      532      544      512   \n",
              "1  Adopted      Alaska      336      293      309      328      367      357   \n",
              "2  Adopted     Arizona     2045     2275     2275     2522     3090     3236   \n",
              "3  Adopted    Arkansas      597      591      703      691      743      740   \n",
              "4  Adopted  California     6459     5710     5938     5541     5471     6079   \n",
              "\n",
              "   FY 2016  FY 2017  FY 2018  FY 2019  \n",
              "0      503      504      712      738  \n",
              "1      312      366      353      396  \n",
              "2     3654     4298     3926     3373  \n",
              "3      758      971     1001      984  \n",
              "4     6542     6524     6966     6981  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-593b9594-e9d9-4917-9848-9516317fe6f2\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Status</th>\n",
              "      <th>State</th>\n",
              "      <th>FY 2010</th>\n",
              "      <th>FY 2011</th>\n",
              "      <th>FY 2012</th>\n",
              "      <th>FY 2013</th>\n",
              "      <th>FY 2014</th>\n",
              "      <th>FY 2015</th>\n",
              "      <th>FY 2016</th>\n",
              "      <th>FY 2017</th>\n",
              "      <th>FY 2018</th>\n",
              "      <th>FY 2019</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Adopted</td>\n",
              "      <td>Alabama</td>\n",
              "      <td>606</td>\n",
              "      <td>447</td>\n",
              "      <td>587</td>\n",
              "      <td>532</td>\n",
              "      <td>544</td>\n",
              "      <td>512</td>\n",
              "      <td>503</td>\n",
              "      <td>504</td>\n",
              "      <td>712</td>\n",
              "      <td>738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Adopted</td>\n",
              "      <td>Alaska</td>\n",
              "      <td>336</td>\n",
              "      <td>293</td>\n",
              "      <td>309</td>\n",
              "      <td>328</td>\n",
              "      <td>367</td>\n",
              "      <td>357</td>\n",
              "      <td>312</td>\n",
              "      <td>366</td>\n",
              "      <td>353</td>\n",
              "      <td>396</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Adopted</td>\n",
              "      <td>Arizona</td>\n",
              "      <td>2045</td>\n",
              "      <td>2275</td>\n",
              "      <td>2275</td>\n",
              "      <td>2522</td>\n",
              "      <td>3090</td>\n",
              "      <td>3236</td>\n",
              "      <td>3654</td>\n",
              "      <td>4298</td>\n",
              "      <td>3926</td>\n",
              "      <td>3373</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Adopted</td>\n",
              "      <td>Arkansas</td>\n",
              "      <td>597</td>\n",
              "      <td>591</td>\n",
              "      <td>703</td>\n",
              "      <td>691</td>\n",
              "      <td>743</td>\n",
              "      <td>740</td>\n",
              "      <td>758</td>\n",
              "      <td>971</td>\n",
              "      <td>1001</td>\n",
              "      <td>984</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Adopted</td>\n",
              "      <td>California</td>\n",
              "      <td>6459</td>\n",
              "      <td>5710</td>\n",
              "      <td>5938</td>\n",
              "      <td>5541</td>\n",
              "      <td>5471</td>\n",
              "      <td>6079</td>\n",
              "      <td>6542</td>\n",
              "      <td>6524</td>\n",
              "      <td>6966</td>\n",
              "      <td>6981</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-593b9594-e9d9-4917-9848-9516317fe6f2')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-593b9594-e9d9-4917-9848-9516317fe6f2 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-593b9594-e9d9-4917-9848-9516317fe6f2');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "AV4ghSLpznk4",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 267
        },
        "outputId": "e672a767-7e21-4168-e8e2-55cf30db1f7f"
      },
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        State  FY 2010  FY 2011  FY 2012  FY 2013  FY 2014  FY 2015  FY 2016  \\\n",
              "0     Alabama     5350     5253     4561     4435     4526     4745     5053   \n",
              "1      Alaska     1791     1835     1854     1982     2190     2653     2824   \n",
              "2     Arizona     9930    10883    13461    14399    16246    17738    17118   \n",
              "3    Arkansas     3756     3732     3711     3797     3806     4548     4880   \n",
              "4  California    56202    54754    54553    55383    56771    55983    54685   \n",
              "\n",
              "   FY 2017  FY 2018  FY 2019  Difference  \n",
              "0     5631     5930     5783         433  \n",
              "1     2739     2781     2879        1088  \n",
              "2    15031    13360    13330        3400  \n",
              "3     4776     4234     4127         371  \n",
              "4    51869    52337    51268       -4934  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6d697c82-561b-48c8-a0ff-96398bd343cc\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>FY 2010</th>\n",
              "      <th>FY 2011</th>\n",
              "      <th>FY 2012</th>\n",
              "      <th>FY 2013</th>\n",
              "      <th>FY 2014</th>\n",
              "      <th>FY 2015</th>\n",
              "      <th>FY 2016</th>\n",
              "      <th>FY 2017</th>\n",
              "      <th>FY 2018</th>\n",
              "      <th>FY 2019</th>\n",
              "      <th>Difference</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>5350</td>\n",
              "      <td>5253</td>\n",
              "      <td>4561</td>\n",
              "      <td>4435</td>\n",
              "      <td>4526</td>\n",
              "      <td>4745</td>\n",
              "      <td>5053</td>\n",
              "      <td>5631</td>\n",
              "      <td>5930</td>\n",
              "      <td>5783</td>\n",
              "      <td>433</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>1791</td>\n",
              "      <td>1835</td>\n",
              "      <td>1854</td>\n",
              "      <td>1982</td>\n",
              "      <td>2190</td>\n",
              "      <td>2653</td>\n",
              "      <td>2824</td>\n",
              "      <td>2739</td>\n",
              "      <td>2781</td>\n",
              "      <td>2879</td>\n",
              "      <td>1088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>9930</td>\n",
              "      <td>10883</td>\n",
              "      <td>13461</td>\n",
              "      <td>14399</td>\n",
              "      <td>16246</td>\n",
              "      <td>17738</td>\n",
              "      <td>17118</td>\n",
              "      <td>15031</td>\n",
              "      <td>13360</td>\n",
              "      <td>13330</td>\n",
              "      <td>3400</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>3756</td>\n",
              "      <td>3732</td>\n",
              "      <td>3711</td>\n",
              "      <td>3797</td>\n",
              "      <td>3806</td>\n",
              "      <td>4548</td>\n",
              "      <td>4880</td>\n",
              "      <td>4776</td>\n",
              "      <td>4234</td>\n",
              "      <td>4127</td>\n",
              "      <td>371</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>California</td>\n",
              "      <td>56202</td>\n",
              "      <td>54754</td>\n",
              "      <td>54553</td>\n",
              "      <td>55383</td>\n",
              "      <td>56771</td>\n",
              "      <td>55983</td>\n",
              "      <td>54685</td>\n",
              "      <td>51869</td>\n",
              "      <td>52337</td>\n",
              "      <td>51268</td>\n",
              "      <td>-4934</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6d697c82-561b-48c8-a0ff-96398bd343cc')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6d697c82-561b-48c8-a0ff-96398bd343cc button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6d697c82-561b-48c8-a0ff-96398bd343cc');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ],
      "source": [
        "victims_df = victims_df.rename(columns = {\"Number\":\"Victim Population\", \"Rate per 1,000\":\"Victim Rate per 1,000\"})\n",
        "perpetrators_df = perpetrators_df.rename(columns = {\"Unique count Perpetrators\":\"Perpetrators\"})\n",
        "in_care = in_care_df.copy()\n",
        "tpr = tpr_df.copy()\n",
        "adopted = adopted_df.copy()\n",
        "in_care[\"Difference\"] = in_care[\"FY 2019\"] - in_care[\"FY 2010\"]\n",
        "in_care.head()"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "status = []\n",
        "for index, row in in_care.iterrows():\n",
        "    difference = row[\"Difference\"]\n",
        "    if difference > 0:\n",
        "        status.append(\"Increase\")\n",
        "    else:\n",
        "        status.append(\"Decrease\")\n",
        "\n",
        "in_care[\"Status\"] = status"
      ],
      "metadata": {
        "id": "ZylDp_Pf7vGo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "in_care = in_care[[\"State\",\"Status\"]]\n",
        "tpr = tpr.rename(columns = {\"FY 2011\":\"2011 TPR\"})\n",
        "tpr = tpr[[\"State\",\"2011 TPR\"]]\n",
        "adopted = adopted.rename(columns = {\"FY 2011\":\"2011 Adopted\"})\n",
        "adopted = adopted[[\"State\",\"2011 Adopted\"]]\n",
        "victims_df[\"State\"] = victims_df[\"State\"].astype(str)\n",
        "victims_df[\"State\"] = victims_df[\"State\"].str.rstrip()\n",
        "victims_df = victims_df[[\"State\",\"Victim Population\",\"Rate per 100000\"]]\n",
        "perpetrators_df[\"State\"] = perpetrators_df[\"State\"].astype(str)\n",
        "perpetrators_df[\"State\"] = perpetrators_df[\"State\"].str.rstrip()\n"
      ],
      "metadata": {
        "id": "y01ABPa97wYn"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "in_care_victims = victims_df.merge(in_care, how=\"inner\", on = \"State\")\n",
        "in_care_victims.head()\n"
      ],
      "metadata": {
        "id": "j8eIdIWT70C0",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "5eab247d-cd53-4558-f1ad-a0443d4f2cf5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        State  Victim Population  Rate per 100000    Status\n",
              "0     Alabama             8601.0            763.0  Increase\n",
              "1      Alaska             2898.0           1538.0  Increase\n",
              "2     Arizona             8708.0            536.0  Increase\n",
              "3    Arkansas            11105.0           1563.0  Increase\n",
              "4  California            80100.0            864.0  Decrease"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a3380f8b-4237-4ce1-a149-d4057bfa73f8\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Victim Population</th>\n",
              "      <th>Rate per 100000</th>\n",
              "      <th>Status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>8601.0</td>\n",
              "      <td>763.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>2898.0</td>\n",
              "      <td>1538.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>8708.0</td>\n",
              "      <td>536.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>11105.0</td>\n",
              "      <td>1563.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>California</td>\n",
              "      <td>80100.0</td>\n",
              "      <td>864.0</td>\n",
              "      <td>Decrease</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3380f8b-4237-4ce1-a149-d4057bfa73f8')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a3380f8b-4237-4ce1-a149-d4057bfa73f8 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a3380f8b-4237-4ce1-a149-d4057bfa73f8');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "in_care_victims_perps = perpetrators_df.merge(in_care_victims, how = \"inner\", on =\"State\")\n",
        "in_care_victims_perps.head()"
      ],
      "metadata": {
        "id": "yK_9PcAa70_g",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "d21b80f8-a2d9-4251-8a63-258bfc6e945d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        State  Perpetrators  Victim Population  Rate per 100000    Status\n",
              "0     Alabama        7260.0             8601.0            763.0  Increase\n",
              "1      Alaska        2238.0             2898.0           1538.0  Increase\n",
              "2     Arizona        9405.0             8708.0            536.0  Increase\n",
              "3    Arkansas        9552.0            11105.0           1563.0  Increase\n",
              "4  California       62574.0            80100.0            864.0  Decrease"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2e1b69c1-86f4-4ef4-b23c-6d350bc1c125\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>Perpetrators</th>\n",
              "      <th>Victim Population</th>\n",
              "      <th>Rate per 100000</th>\n",
              "      <th>Status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>7260.0</td>\n",
              "      <td>8601.0</td>\n",
              "      <td>763.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>2238.0</td>\n",
              "      <td>2898.0</td>\n",
              "      <td>1538.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>9405.0</td>\n",
              "      <td>8708.0</td>\n",
              "      <td>536.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>9552.0</td>\n",
              "      <td>11105.0</td>\n",
              "      <td>1563.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>California</td>\n",
              "      <td>62574.0</td>\n",
              "      <td>80100.0</td>\n",
              "      <td>864.0</td>\n",
              "      <td>Decrease</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e1b69c1-86f4-4ef4-b23c-6d350bc1c125')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-2e1b69c1-86f4-4ef4-b23c-6d350bc1c125 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-2e1b69c1-86f4-4ef4-b23c-6d350bc1c125');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "in_care_victims_perps_tpr = tpr.merge(in_care_victims_perps, how = \"inner\", on =\"State\")\n",
        "in_care_victims_perps_tpr.head()"
      ],
      "metadata": {
        "id": "_yDCKyY_73-F",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "50a9f91a-52df-4415-b3a2-a3110bdf6660"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        State  2011 TPR  Perpetrators  Victim Population  Rate per 100000  \\\n",
              "0     Alabama       701        7260.0             8601.0            763.0   \n",
              "1      Alaska       389        2238.0             2898.0           1538.0   \n",
              "2     Arizona      2220        9405.0             8708.0            536.0   \n",
              "3    Arkansas       742        9552.0            11105.0           1563.0   \n",
              "4  California      6928       62574.0            80100.0            864.0   \n",
              "\n",
              "     Status  \n",
              "0  Increase  \n",
              "1  Increase  \n",
              "2  Increase  \n",
              "3  Increase  \n",
              "4  Decrease  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7e1cf52e-436e-4d4a-85c9-1390e5439f31\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>2011 TPR</th>\n",
              "      <th>Perpetrators</th>\n",
              "      <th>Victim Population</th>\n",
              "      <th>Rate per 100000</th>\n",
              "      <th>Status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>701</td>\n",
              "      <td>7260.0</td>\n",
              "      <td>8601.0</td>\n",
              "      <td>763.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>389</td>\n",
              "      <td>2238.0</td>\n",
              "      <td>2898.0</td>\n",
              "      <td>1538.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>2220</td>\n",
              "      <td>9405.0</td>\n",
              "      <td>8708.0</td>\n",
              "      <td>536.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>742</td>\n",
              "      <td>9552.0</td>\n",
              "      <td>11105.0</td>\n",
              "      <td>1563.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>California</td>\n",
              "      <td>6928</td>\n",
              "      <td>62574.0</td>\n",
              "      <td>80100.0</td>\n",
              "      <td>864.0</td>\n",
              "      <td>Decrease</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7e1cf52e-436e-4d4a-85c9-1390e5439f31')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7e1cf52e-436e-4d4a-85c9-1390e5439f31 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7e1cf52e-436e-4d4a-85c9-1390e5439f31');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "in_care_victims_perps_tpr_adopted = adopted.merge(in_care_victims_perps_tpr, how = \"inner\", on =\"State\")\n",
        "in_care_victims_perps_tpr_adopted.head()"
      ],
      "metadata": {
        "id": "jDwsjVae774I",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "a204bb46-cb71-4b9e-def7-8814476e2af1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        State  2011 Adopted  2011 TPR  Perpetrators  Victim Population  \\\n",
              "0     Alabama           447       701        7260.0             8601.0   \n",
              "1      Alaska           293       389        2238.0             2898.0   \n",
              "2     Arizona          2275      2220        9405.0             8708.0   \n",
              "3    Arkansas           591       742        9552.0            11105.0   \n",
              "4  California          5710      6928       62574.0            80100.0   \n",
              "\n",
              "   Rate per 100000    Status  \n",
              "0            763.0  Increase  \n",
              "1           1538.0  Increase  \n",
              "2            536.0  Increase  \n",
              "3           1563.0  Increase  \n",
              "4            864.0  Decrease  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-de653284-dd97-4f3e-8abf-179cdd0d327c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>State</th>\n",
              "      <th>2011 Adopted</th>\n",
              "      <th>2011 TPR</th>\n",
              "      <th>Perpetrators</th>\n",
              "      <th>Victim Population</th>\n",
              "      <th>Rate per 100000</th>\n",
              "      <th>Status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Alabama</td>\n",
              "      <td>447</td>\n",
              "      <td>701</td>\n",
              "      <td>7260.0</td>\n",
              "      <td>8601.0</td>\n",
              "      <td>763.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Alaska</td>\n",
              "      <td>293</td>\n",
              "      <td>389</td>\n",
              "      <td>2238.0</td>\n",
              "      <td>2898.0</td>\n",
              "      <td>1538.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Arizona</td>\n",
              "      <td>2275</td>\n",
              "      <td>2220</td>\n",
              "      <td>9405.0</td>\n",
              "      <td>8708.0</td>\n",
              "      <td>536.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Arkansas</td>\n",
              "      <td>591</td>\n",
              "      <td>742</td>\n",
              "      <td>9552.0</td>\n",
              "      <td>11105.0</td>\n",
              "      <td>1563.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>California</td>\n",
              "      <td>5710</td>\n",
              "      <td>6928</td>\n",
              "      <td>62574.0</td>\n",
              "      <td>80100.0</td>\n",
              "      <td>864.0</td>\n",
              "      <td>Decrease</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de653284-dd97-4f3e-8abf-179cdd0d327c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-de653284-dd97-4f3e-8abf-179cdd0d327c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-de653284-dd97-4f3e-8abf-179cdd0d327c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "final_df = in_care_victims_perps_tpr_adopted.drop(\"State\",axis=1)\n",
        "final_df = final_df.dropna(how='any')\n",
        "final_df.head()"
      ],
      "metadata": {
        "id": "vC638Krc7-2o",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "04f09089-9f6e-4b18-a54e-6e3448baad38"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   2011 Adopted  2011 TPR  Perpetrators  Victim Population  Rate per 100000  \\\n",
              "0           447       701        7260.0             8601.0            763.0   \n",
              "1           293       389        2238.0             2898.0           1538.0   \n",
              "2          2275      2220        9405.0             8708.0            536.0   \n",
              "3           591       742        9552.0            11105.0           1563.0   \n",
              "4          5710      6928       62574.0            80100.0            864.0   \n",
              "\n",
              "     Status  \n",
              "0  Increase  \n",
              "1  Increase  \n",
              "2  Increase  \n",
              "3  Increase  \n",
              "4  Decrease  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4b75363c-1f9c-4384-ad0c-74c8421dbf4c\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>2011 Adopted</th>\n",
              "      <th>2011 TPR</th>\n",
              "      <th>Perpetrators</th>\n",
              "      <th>Victim Population</th>\n",
              "      <th>Rate per 100000</th>\n",
              "      <th>Status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>447</td>\n",
              "      <td>701</td>\n",
              "      <td>7260.0</td>\n",
              "      <td>8601.0</td>\n",
              "      <td>763.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>293</td>\n",
              "      <td>389</td>\n",
              "      <td>2238.0</td>\n",
              "      <td>2898.0</td>\n",
              "      <td>1538.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2275</td>\n",
              "      <td>2220</td>\n",
              "      <td>9405.0</td>\n",
              "      <td>8708.0</td>\n",
              "      <td>536.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>591</td>\n",
              "      <td>742</td>\n",
              "      <td>9552.0</td>\n",
              "      <td>11105.0</td>\n",
              "      <td>1563.0</td>\n",
              "      <td>Increase</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5710</td>\n",
              "      <td>6928</td>\n",
              "      <td>62574.0</td>\n",
              "      <td>80100.0</td>\n",
              "      <td>864.0</td>\n",
              "      <td>Decrease</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4b75363c-1f9c-4384-ad0c-74c8421dbf4c')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-4b75363c-1f9c-4384-ad0c-74c8421dbf4c button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-4b75363c-1f9c-4384-ad0c-74c8421dbf4c');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "final_df['Status'] = final_df['Status'].replace(['Increase', 'Decrease'],[1,0])\n",
        "final_df"
      ],
      "metadata": {
        "id": "IowS5HKVfSwr",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "cd9995d9-78f4-4e03-eb4e-6d85b6d51773"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    2011 Adopted  2011 TPR  Perpetrators  Victim Population  Rate per 100000  \\\n",
              "0            447       701        7260.0             8601.0            763.0   \n",
              "1            293       389        2238.0             2898.0           1538.0   \n",
              "2           2275      2220        9405.0             8708.0            536.0   \n",
              "3            591       742        9552.0            11105.0           1563.0   \n",
              "4           5710      6928       62574.0            80100.0            864.0   \n",
              "5            934       557        8977.0            10604.0            862.0   \n",
              "6            611       577        8250.0            10012.0           1246.0   \n",
              "7             95       145        1903.0             2466.0           1205.0   \n",
              "8            106        98        1761.0             2377.0           2257.0   \n",
              "9           2945      2943       38228.0            51920.0           1300.0   \n",
              "11           198       267        1147.0             1346.0            442.0   \n",
              "12           259       262        1226.0             1470.0            343.0   \n",
              "13          1217      1963       18475.0            25832.0            834.0   \n",
              "14          1556      1397       15173.0            17930.0           1122.0   \n",
              "15           864       861        8756.0            11028.0           1522.0   \n",
              "16           781      1265        1434.0             1729.0            239.0   \n",
              "17           824      1095       11810.0            16994.0           1665.0   \n",
              "18           641       809        7086.0             9545.0            854.0   \n",
              "19           296       449        2806.0             3118.0           1158.0   \n",
              "20           539       238       10762.0            13740.0           1020.0   \n",
              "21           724      1495       16462.0            20262.0           1442.0   \n",
              "22          2506      3613       26874.0            33366.0           1453.0   \n",
              "23           572       961        3346.0             4342.0            340.0   \n",
              "24           358       459        5120.0             6712.0            895.0   \n",
              "25          1212       976        5108.0             5826.0            413.0   \n",
              "26           238       314         774.0             1066.0            479.0   \n",
              "27           413       486        3012.0             4307.0            936.0   \n",
              "28           821       938        4294.0             5355.0            807.0   \n",
              "29           144        25         761.0              876.0            313.0   \n",
              "30          1089       689        6414.0             8238.0            403.0   \n",
              "31           351       441        4775.0             5601.0           1078.0   \n",
              "32          2214      3266       58078.0            72625.0           1694.0   \n",
              "33          1463      1126        4758.0            22940.0           1003.0   \n",
              "34           119       116         873.0             1295.0            857.0   \n",
              "35          1420      2484       24644.0            30601.0           1136.0   \n",
              "36          1294      1872        7492.0             7836.0            837.0   \n",
              "38          2013      1277        3295.0             3287.0            119.0   \n",
              "39           201       148        2541.0             3131.0           1426.0   \n",
              "40           588       674        8550.0            11324.0           1048.0   \n",
              "41           168       315         963.0             1353.0            666.0   \n",
              "42           772       638        8082.0             9243.0            619.0   \n",
              "43          4718      9120       50358.0            63474.0            912.0   \n",
              "44           577       337        7743.0            10586.0           1203.0   \n",
              "45           134       135         519.0              630.0            500.0   \n",
              "46           755       954        5092.0             5964.0            322.0   \n",
              "47          1583      1340        5593.0             6541.0            414.0   \n",
              "48           698      1164        3626.0             4000.0           1040.0   \n",
              "49           717       643        4061.0             4750.0            358.0   \n",
              "50            73        65         547.0              703.0            521.0   \n",
              "\n",
              "    Status  \n",
              "0        1  \n",
              "1        1  \n",
              "2        1  \n",
              "3        1  \n",
              "4        0  \n",
              "5        0  \n",
              "6        0  \n",
              "7        0  \n",
              "8        0  \n",
              "9        1  \n",
              "11       1  \n",
              "12       1  \n",
              "13       1  \n",
              "14       1  \n",
              "15       0  \n",
              "16       1  \n",
              "17       1  \n",
              "18       0  \n",
              "19       1  \n",
              "20       0  \n",
              "21       1  \n",
              "22       0  \n",
              "23       1  \n",
              "24       1  \n",
              "25       1  \n",
              "26       1  \n",
              "27       0  \n",
              "28       0  \n",
              "29       1  \n",
              "30       0  \n",
              "31       1  \n",
              "32       0  \n",
              "33       1  \n",
              "34       1  \n",
              "35       1  \n",
              "36       1  \n",
              "38       0  \n",
              "39       1  \n",
              "40       1  \n",
              "41       1  \n",
              "42       1  \n",
              "43       1  \n",
              "44       0  \n",
              "45       1  \n",
              "46       0  \n",
              "47       1  \n",
              "48       1  \n",
              "49       1  \n",
              "50       1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7bf43d37-0981-4c02-9d7e-1f628657e897\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>2011 Adopted</th>\n",
              "      <th>2011 TPR</th>\n",
              "      <th>Perpetrators</th>\n",
              "      <th>Victim Population</th>\n",
              "      <th>Rate per 100000</th>\n",
              "      <th>Status</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>447</td>\n",
              "      <td>701</td>\n",
              "      <td>7260.0</td>\n",
              "      <td>8601.0</td>\n",
              "      <td>763.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>293</td>\n",
              "      <td>389</td>\n",
              "      <td>2238.0</td>\n",
              "      <td>2898.0</td>\n",
              "      <td>1538.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2275</td>\n",
              "      <td>2220</td>\n",
              "      <td>9405.0</td>\n",
              "      <td>8708.0</td>\n",
              "      <td>536.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>591</td>\n",
              "      <td>742</td>\n",
              "      <td>9552.0</td>\n",
              "      <td>11105.0</td>\n",
              "      <td>1563.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5710</td>\n",
              "      <td>6928</td>\n",
              "      <td>62574.0</td>\n",
              "      <td>80100.0</td>\n",
              "      <td>864.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>934</td>\n",
              "      <td>557</td>\n",
              "      <td>8977.0</td>\n",
              "      <td>10604.0</td>\n",
              "      <td>862.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>611</td>\n",
              "      <td>577</td>\n",
              "      <td>8250.0</td>\n",
              "      <td>10012.0</td>\n",
              "      <td>1246.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>95</td>\n",
              "      <td>145</td>\n",
              "      <td>1903.0</td>\n",
              "      <td>2466.0</td>\n",
              "      <td>1205.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>106</td>\n",
              "      <td>98</td>\n",
              "      <td>1761.0</td>\n",
              "      <td>2377.0</td>\n",
              "      <td>2257.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>2945</td>\n",
              "      <td>2943</td>\n",
              "      <td>38228.0</td>\n",
              "      <td>51920.0</td>\n",
              "      <td>1300.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>198</td>\n",
              "      <td>267</td>\n",
              "      <td>1147.0</td>\n",
              "      <td>1346.0</td>\n",
              "      <td>442.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>259</td>\n",
              "      <td>262</td>\n",
              "      <td>1226.0</td>\n",
              "      <td>1470.0</td>\n",
              "      <td>343.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1217</td>\n",
              "      <td>1963</td>\n",
              "      <td>18475.0</td>\n",
              "      <td>25832.0</td>\n",
              "      <td>834.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1556</td>\n",
              "      <td>1397</td>\n",
              "      <td>15173.0</td>\n",
              "      <td>17930.0</td>\n",
              "      <td>1122.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>864</td>\n",
              "      <td>861</td>\n",
              "      <td>8756.0</td>\n",
              "      <td>11028.0</td>\n",
              "      <td>1522.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>781</td>\n",
              "      <td>1265</td>\n",
              "      <td>1434.0</td>\n",
              "      <td>1729.0</td>\n",
              "      <td>239.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>824</td>\n",
              "      <td>1095</td>\n",
              "      <td>11810.0</td>\n",
              "      <td>16994.0</td>\n",
              "      <td>1665.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>641</td>\n",
              "      <td>809</td>\n",
              "      <td>7086.0</td>\n",
              "      <td>9545.0</td>\n",
              "      <td>854.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>296</td>\n",
              "      <td>449</td>\n",
              "      <td>2806.0</td>\n",
              "      <td>3118.0</td>\n",
              "      <td>1158.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>539</td>\n",
              "      <td>238</td>\n",
              "      <td>10762.0</td>\n",
              "      <td>13740.0</td>\n",
              "      <td>1020.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>724</td>\n",
              "      <td>1495</td>\n",
              "      <td>16462.0</td>\n",
              "      <td>20262.0</td>\n",
              "      <td>1442.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>2506</td>\n",
              "      <td>3613</td>\n",
              "      <td>26874.0</td>\n",
              "      <td>33366.0</td>\n",
              "      <td>1453.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>572</td>\n",
              "      <td>961</td>\n",
              "      <td>3346.0</td>\n",
              "      <td>4342.0</td>\n",
              "      <td>340.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>358</td>\n",
              "      <td>459</td>\n",
              "      <td>5120.0</td>\n",
              "      <td>6712.0</td>\n",
              "      <td>895.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>1212</td>\n",
              "      <td>976</td>\n",
              "      <td>5108.0</td>\n",
              "      <td>5826.0</td>\n",
              "      <td>413.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>238</td>\n",
              "      <td>314</td>\n",
              "      <td>774.0</td>\n",
              "      <td>1066.0</td>\n",
              "      <td>479.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>413</td>\n",
              "      <td>486</td>\n",
              "      <td>3012.0</td>\n",
              "      <td>4307.0</td>\n",
              "      <td>936.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>821</td>\n",
              "      <td>938</td>\n",
              "      <td>4294.0</td>\n",
              "      <td>5355.0</td>\n",
              "      <td>807.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>144</td>\n",
              "      <td>25</td>\n",
              "      <td>761.0</td>\n",
              "      <td>876.0</td>\n",
              "      <td>313.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>1089</td>\n",
              "      <td>689</td>\n",
              "      <td>6414.0</td>\n",
              "      <td>8238.0</td>\n",
              "      <td>403.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>351</td>\n",
              "      <td>441</td>\n",
              "      <td>4775.0</td>\n",
              "      <td>5601.0</td>\n",
              "      <td>1078.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>2214</td>\n",
              "      <td>3266</td>\n",
              "      <td>58078.0</td>\n",
              "      <td>72625.0</td>\n",
              "      <td>1694.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>1463</td>\n",
              "      <td>1126</td>\n",
              "      <td>4758.0</td>\n",
              "      <td>22940.0</td>\n",
              "      <td>1003.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>119</td>\n",
              "      <td>116</td>\n",
              "      <td>873.0</td>\n",
              "      <td>1295.0</td>\n",
              "      <td>857.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>1420</td>\n",
              "      <td>2484</td>\n",
              "      <td>24644.0</td>\n",
              "      <td>30601.0</td>\n",
              "      <td>1136.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>1294</td>\n",
              "      <td>1872</td>\n",
              "      <td>7492.0</td>\n",
              "      <td>7836.0</td>\n",
              "      <td>837.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>2013</td>\n",
              "      <td>1277</td>\n",
              "      <td>3295.0</td>\n",
              "      <td>3287.0</td>\n",
              "      <td>119.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>201</td>\n",
              "      <td>148</td>\n",
              "      <td>2541.0</td>\n",
              "      <td>3131.0</td>\n",
              "      <td>1426.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>588</td>\n",
              "      <td>674</td>\n",
              "      <td>8550.0</td>\n",
              "      <td>11324.0</td>\n",
              "      <td>1048.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>168</td>\n",
              "      <td>315</td>\n",
              "      <td>963.0</td>\n",
              "      <td>1353.0</td>\n",
              "      <td>666.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>772</td>\n",
              "      <td>638</td>\n",
              "      <td>8082.0</td>\n",
              "      <td>9243.0</td>\n",
              "      <td>619.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>4718</td>\n",
              "      <td>9120</td>\n",
              "      <td>50358.0</td>\n",
              "      <td>63474.0</td>\n",
              "      <td>912.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>577</td>\n",
              "      <td>337</td>\n",
              "      <td>7743.0</td>\n",
              "      <td>10586.0</td>\n",
              "      <td>1203.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>134</td>\n",
              "      <td>135</td>\n",
              "      <td>519.0</td>\n",
              "      <td>630.0</td>\n",
              "      <td>500.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>755</td>\n",
              "      <td>954</td>\n",
              "      <td>5092.0</td>\n",
              "      <td>5964.0</td>\n",
              "      <td>322.0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>1583</td>\n",
              "      <td>1340</td>\n",
              "      <td>5593.0</td>\n",
              "      <td>6541.0</td>\n",
              "      <td>414.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>698</td>\n",
              "      <td>1164</td>\n",
              "      <td>3626.0</td>\n",
              "      <td>4000.0</td>\n",
              "      <td>1040.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>717</td>\n",
              "      <td>643</td>\n",
              "      <td>4061.0</td>\n",
              "      <td>4750.0</td>\n",
              "      <td>358.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>73</td>\n",
              "      <td>65</td>\n",
              "      <td>547.0</td>\n",
              "      <td>703.0</td>\n",
              "      <td>521.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7bf43d37-0981-4c02-9d7e-1f628657e897')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7bf43d37-0981-4c02-9d7e-1f628657e897 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7bf43d37-0981-4c02-9d7e-1f628657e897');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "target = final_df[\"Status\"]\n",
        "target_names = [\"1\", \"0\"]\n",
        "target.shape\n"
      ],
      "metadata": {
        "id": "4iGgLIYE8A3G",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "bff8a481-8026-4aed-e8fa-50b8319839a3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(49,)"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data = final_df.drop(\"Status\", axis=1)\n",
        "data.shape"
      ],
      "metadata": {
        "id": "5ijzQMua8DkW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "19b58481-e5ac-4a01-92a5-5f99f87fadf3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(49, 5)"
            ]
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data.head()\n"
      ],
      "metadata": {
        "id": "iZJQ64rU8HdI",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "outputId": "f7ea9735-2c0c-4b1d-f830-e27c670a6f2e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   2011 Adopted  2011 TPR  Perpetrators  Victim Population  Rate per 100000\n",
              "0           447       701        7260.0             8601.0            763.0\n",
              "1           293       389        2238.0             2898.0           1538.0\n",
              "2          2275      2220        9405.0             8708.0            536.0\n",
              "3           591       742        9552.0            11105.0           1563.0\n",
              "4          5710      6928       62574.0            80100.0            864.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-39115a4e-937c-4f4f-b851-55f96a4b7854\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>2011 Adopted</th>\n",
              "      <th>2011 TPR</th>\n",
              "      <th>Perpetrators</th>\n",
              "      <th>Victim Population</th>\n",
              "      <th>Rate per 100000</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>447</td>\n",
              "      <td>701</td>\n",
              "      <td>7260.0</td>\n",
              "      <td>8601.0</td>\n",
              "      <td>763.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>293</td>\n",
              "      <td>389</td>\n",
              "      <td>2238.0</td>\n",
              "      <td>2898.0</td>\n",
              "      <td>1538.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2275</td>\n",
              "      <td>2220</td>\n",
              "      <td>9405.0</td>\n",
              "      <td>8708.0</td>\n",
              "      <td>536.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>591</td>\n",
              "      <td>742</td>\n",
              "      <td>9552.0</td>\n",
              "      <td>11105.0</td>\n",
              "      <td>1563.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5710</td>\n",
              "      <td>6928</td>\n",
              "      <td>62574.0</td>\n",
              "      <td>80100.0</td>\n",
              "      <td>864.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39115a4e-937c-4f4f-b851-55f96a4b7854')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-39115a4e-937c-4f4f-b851-55f96a4b7854 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-39115a4e-937c-4f4f-b851-55f96a4b7854');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "X_train, X_test, y_train, y_test = train_test_split(data, target, random_state=42)\n"
      ],
      "metadata": {
        "id": "DzXm1beM8MvG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "# Apply StandardScaler.\n",
        "scaler = StandardScaler()\n",
        "scaler.fit(data)\n",
        "X = scaler.transform(data)"
      ],
      "metadata": {
        "id": "w2jPUZG9KQlY"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from tensorflow.keras.utils import to_categorical\n",
        "\n",
        "# Converts a class vector (integers) to binary class matrix.\n",
        "y = to_categorical(target)\n",
        "y"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "s17wGOYQKgbP",
        "outputId": "556f371b-8389-49ee-810a-688df0d85f12"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [1., 0.],\n",
              "       [1., 0.],\n",
              "       [1., 0.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [1., 0.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.],\n",
              "       [0., 1.]], dtype=float32)"
            ]
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "# Split the dataset into the training set and test subsets.\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 7)\n",
        "print(X_train.shape, X_test.shape, y_train.shape, y_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L_6qBjzGKmfR",
        "outputId": "10b571f4-9367-4cce-90e7-351e710efe5d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(39, 5) (10, 5) (39, 2) (10, 2)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Reshape data.\n",
        "import numpy as np\n",
        "X_train = np.reshape(X_train, (X_train.shape[0], 1, X.shape[1]))\n",
        "X_test = np.reshape(X_test, (X_test.shape[0], 1, X.shape[1]))\n",
        "print(X_train.shape, X_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KIXAx4akKrjk",
        "outputId": "e4877087-43a8-4bdc-a1d8-f29d375f373a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(39, 1, 5) (10, 1, 5)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "from tensorflow.keras.models import Sequential\n",
        "import matplotlib.pyplot as plt\n",
        "(X_train, y_train), (X_test, y_test) = tf.keras.datasets.mnist.load_data()\n",
        "X_train = X_train.reshape(60000,28,28,1).astype('float32')\n",
        "X_test = X_test.reshape(10000,28,28,1).astype('float32')\n",
        "number_class=10\n",
        "y_train = tf.keras.utils.to_categorical(y_train)\n",
        "y_test = tf.keras.utils.to_categorical(y_test)\n",
        "X_train =X_train/255.0\n",
        "X_test =X_test/255.0\n",
        "model = Sequential()\n",
        "model.add(tf.keras.layers.Conv2D(32, (3, 3), activation='relu', input_shape=(28, 28, 1)))\n",
        "model.add(tf.keras.layers.MaxPooling2D((2, 2)))\n",
        "model.add(tf.keras.layers.Flatten())\n",
        "model.add(tf.keras.layers.Dense(100, activation='relu'))\n",
        "model.add(tf.keras.layers.Dense(10, activation='softmax'))\n",
        "# compile model\n",
        "opt = tf.keras.optimizers.SGD(learning_rate=0.01, momentum=0.9)\n",
        "model.compile(optimizer=opt, loss='categorical_crossentropy', metrics=['accuracy'])\n",
        "history = model.fit(X_train,y_train, batch_size=128, epochs=15, verbose=1, validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LslB_gHIK6G0",
        "outputId": "e9919be3-8d52-443d-95f8-91bb4d11d2c2"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n",
            "11493376/11490434 [==============================] - 0s 0us/step\n",
            "11501568/11490434 [==============================] - 0s 0us/step\n",
            "Epoch 1/15\n",
            "469/469 [==============================] - 27s 55ms/step - loss: 0.3962 - accuracy: 0.8860 - val_loss: 0.1665 - val_accuracy: 0.9497\n",
            "Epoch 2/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.1574 - accuracy: 0.9538 - val_loss: 0.1252 - val_accuracy: 0.9606\n",
            "Epoch 3/15\n",
            "469/469 [==============================] - 27s 57ms/step - loss: 0.1137 - accuracy: 0.9653 - val_loss: 0.0913 - val_accuracy: 0.9728\n",
            "Epoch 4/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0896 - accuracy: 0.9733 - val_loss: 0.0798 - val_accuracy: 0.9729\n",
            "Epoch 5/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0732 - accuracy: 0.9785 - val_loss: 0.0783 - val_accuracy: 0.9752\n",
            "Epoch 6/15\n",
            "469/469 [==============================] - 26s 55ms/step - loss: 0.0618 - accuracy: 0.9815 - val_loss: 0.0745 - val_accuracy: 0.9765\n",
            "Epoch 7/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0540 - accuracy: 0.9836 - val_loss: 0.0615 - val_accuracy: 0.9803\n",
            "Epoch 8/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0460 - accuracy: 0.9864 - val_loss: 0.0597 - val_accuracy: 0.9809\n",
            "Epoch 9/15\n",
            "469/469 [==============================] - 26s 55ms/step - loss: 0.0408 - accuracy: 0.9875 - val_loss: 0.0497 - val_accuracy: 0.9844\n",
            "Epoch 10/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0362 - accuracy: 0.9892 - val_loss: 0.0556 - val_accuracy: 0.9817\n",
            "Epoch 11/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0317 - accuracy: 0.9906 - val_loss: 0.0518 - val_accuracy: 0.9825\n",
            "Epoch 12/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0285 - accuracy: 0.9914 - val_loss: 0.0482 - val_accuracy: 0.9836\n",
            "Epoch 13/15\n",
            "469/469 [==============================] - 26s 55ms/step - loss: 0.0256 - accuracy: 0.9928 - val_loss: 0.0428 - val_accuracy: 0.9850\n",
            "Epoch 14/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0226 - accuracy: 0.9936 - val_loss: 0.0534 - val_accuracy: 0.9824\n",
            "Epoch 15/15\n",
            "469/469 [==============================] - 26s 56ms/step - loss: 0.0205 - accuracy: 0.9944 - val_loss: 0.0490 - val_accuracy: 0.9844\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "#print(model.history.keys())\n",
        "# summarize history for accuracy\n",
        "plt.plot(history.history['accuracy'])\n",
        "plt.plot(history.history['val_accuracy'])\n",
        "plt.title('model accuracy')\n",
        "plt.ylabel('accuracy')\n",
        "plt.xlabel('epoch')\n",
        "plt.legend(['train', 'test'], loc='upper left')\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "dH1I0CpKLwUl",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "14e867ef-bf92-432a-def9-875e2ab459cd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(15, 5))\n",
        "plt.plot(history.history['loss'], 'b*-', label=\"train_loss\")\n",
        "plt.plot(history.history['val_loss'], 'r*-', label=\"val_loss\")\n",
        "plt.grid()\n",
        "plt.title(\"train_loss - val_loss\")\n",
        "plt.ylabel(\"Loss\")\n",
        "plt.xlabel(\"Epochs\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "bJhiUUnDL32W",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        },
        "outputId": "709306c8-06b4-4601-f19d-00439394fd1e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x360 with 1 Axes>"
            ],
            "image/png": "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377Ceyxbtox7772XqVOncv755zNjxgwuuuiifX7XnTt3ctlll/H888/Tu3dvLrnkEqZMmcLFF1/M448/zjvvvIOZ8emnnwIwadIknnnmGbp06fLFsbpKZo8f7j7b3Xu7++Huflvs2M1VhT53HxZfwy+2f1vsviPc/W/JrDMZNmyACRPgtNM2kJEBq1fv/x4REREREQmGDIGDDw5BD8LPgw+G446rz88YUmEtvN/97ncce+yxHH/88axevZply/aep6N79+4cc8wxAAwcOJBVq1bt93PeffddunfvTu/evQG49NJLefnll2nTpg25ublcfvnlzJw5k+bNmwNw0kkncdlll/GnP/2JsrL66f+KbHKXxm7mzPBzypS1PPdcJ845J9p6RERERERSyb565uImToR77oHcXCgpgXPOgbvuqr8aWrRo8cXr4uJinnvuOV599VWaN2/OsGHDqlwrLyf+PBeQmZlZ46GeVcnKyuLf//43zz//PNOnT+cPf/gDL7zwAnfffTevv/46Tz/9NAMHDmT+/Pl79TzWVlJ7/ASOPHIrPXrAI49EXYmIiIiISHqJj6J77bXws67LpLVq1ara2Ti3bNlC27Ztad68Oe+88w6vvfZa3T4swRFHHMGqVatYvnw5AA8++CCnnHIK27ZtY8uWLZx11ln85je/4c033wRgxYoVHHfccUyaNImOHTuyuh6GD6rHL8nMwixEv/wlfPRR6J4WEREREZH9i4+iA5g8ue7v1759e0466SSOPvpo8vLyyM/P/+LcyJEjufvuuznqqKM44ogjOP744+v+gTG5ubk88MADnHfeeezevZvBgwczYcIENm3axJgxY9i5cyfuzh133AHAD3/4Q5YtW4a789WvfpVjjz22zjUo+DWAwkL4+c9h+nT4zneirkZEREREpOl6+OGHqzyek5PD3/5W9dQi8ef4OnTowFtvvfVFr2F8Fs7qTJ069YvXX/3qV3njjTcqnO/cuTP//vfeixfMTEy89URDPRvA0UdD374wbVrUlYiIiIiISFOk4NdACgvDlLSa3VNEREREpHG56qqr6N+/f4XtgQceiLqsCjTUs4EUFMCNN8Kjj8J+eoRFRERERCSNTK6PBxCTTD1+DeTww2HwYA33FBERERGRhqfg14AKC2H+fKhiHUgREREREZGkUfBrQOefH5Z3UK+fiIiIiIg0JAW/BtSlC5x8cljM3T3qakREREREpKlQ8GtghYWwdCksWhR1JSIiIiIiaWDdOjjlFFi/vsE/umXLltWeW7VqFUcffXQDVlM3Cn4N7JxzICtLwz1FRERERGrk1lvhlVdg0qSoK0lrWs6hgXXoACNGhOD385+HZ/5ERERERJqc734XFi6s/vycObBnT/n+lClhy8iAoUOrvqd/f/jtb6t9yxtuuIFDDz2Uq666CoCf/OQnZGVl8eKLL7J582ZKS0v52c9+xpgxY2r1VXbu3MnEiROZN28eWVlZ3HHHHQwfPpwlS5bwzW9+k5KSEvbs2cOMGTM45JBDOP/881mzZg1lZWXcdNNNjBs3rlafdyDU4xeBwkJYtQpefz3qSkREREREUtSQIXDwwSHoQfh58MFw3HEH/Jbjxo2jqKjoi/2ioiIuvfRSHn/8cRYsWMCLL77I9ddfj9dyQo7JkydjZixevJhHHnmESy+9lJ07d3L33Xdz3XXXsXDhQubNm0fXrl35+9//ziGHHMKbb77JW2+9xciRIw/4+9SGevwiMGYM5OaGSV6OPz7qakREREREIrCPnrkvTJwI99wT/vJcUhKem7rrrgP+yAEDBvDRRx/x4Ycf8vHHH9O2bVs6derE9773PV5++WUyMjJYu3YtGzZsoFOnTjV+31deeYVrrrkGgCOPPJLDDjuM9957jxNOOIHbbruNNWvW8I1vfINevXrRr18/rr/+en70ox9x9tlnM7S63st6ph6/CLRuDaNGQVERlJVFXY2IiIiISIrasAEmTIDXXgs/62GCl/POO4/p06fz6KOPMm7cOB566CE+/vhj5s+fz8KFC8nPz2fnzp31UDxccMEFzJo1i7y8PM466yxeeOEFevfuzYIFC+jXrx833ngjkxro2UX1+EWkoABmzICXXoJTT426GhERERGRFDRzZvnryZPr5S3HjRvHlVdeySeffMJLL71EUVERBx98MNnZ2bz44ou8//77tX7PoUOH8tBDD3Hqqafy3nvv8cEHH3DEEUewcuVKevTowbXXXssHH3zAokWLOPLII2nXrh0XXXQRBx10EPfee2+9fK/9UfCLyKhR0KpVGO6p4CciIiIi0jD69u3L1q1b6dKlC507d+bCCy/ka1/7Gv369WPQoEEceeSRtX7P73znO0ycOJF+/fqRlZXF1KlTycnJoaioiAcf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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(15, 5))\n",
        "plt.plot(history.history['accuracy'], 'b*-', label=\"train_acc\")\n",
        "plt.plot(history.history['val_accuracy'], 'r*-', label=\"val_acc\")\n",
        "plt.grid()\n",
        "plt.title(\"train_acc vs val_acc\")\n",
        "plt.ylabel(\"Accuracy\")\n",
        "plt.xlabel(\"Epochs\")\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "U36MtmfOL8LD",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        },
        "outputId": "c7f7218f-55cb-4cd0-bcee-7306e2cdc1dd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred=model.predict(X_test)"
      ],
      "metadata": {
        "id": "sm87KWhiMD7x"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "score = model.evaluate(X_test, y_test, verbose=1)\n",
        "print('Test loss:', score[0])\n",
        "print('Test accuracy:', score[1])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "65YmiqoeMIPm",
        "outputId": "5ae2985c-6ab6-4523-8976-2ca43a4d7d3d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "313/313 [==============================] - 2s 7ms/step - loss: 0.0490 - accuracy: 0.9844\n",
            "Test loss: 0.04898976907134056\n",
            "Test accuracy: 0.9843999743461609\n"
          ]
        }
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}